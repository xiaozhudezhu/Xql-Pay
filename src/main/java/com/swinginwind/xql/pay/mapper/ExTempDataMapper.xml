<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.swinginwind.xql.pay.mapper.ExTempDataMapper" >
  <resultMap id="BaseResultMap" type="com.swinginwind.xql.pay.entity.ExTempData" >
    <id column="token" property="token" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.swinginwind.xql.pay.entity.ExTempData" extends="BaseResultMap" >
    <result column="data" property="data" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    token, type, create_time
  </sql>
  <sql id="Blob_Column_List" >
    data
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tsports.ex_temp_data
    where token = #{token,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tsports.ex_temp_data
    where token = #{token,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.swinginwind.xql.pay.entity.ExTempData" >
    insert into tsports.ex_temp_data (token, type, create_time, 
      data)
    values (#{token,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{data,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.swinginwind.xql.pay.entity.ExTempData" >
    insert into tsports.ex_temp_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="token != null" >
        token,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="data != null" >
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="data != null" >
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.swinginwind.xql.pay.entity.ExTempData" >
    update tsports.ex_temp_data
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where token = #{token,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.swinginwind.xql.pay.entity.ExTempData" >
    update tsports.ex_temp_data
    set type = #{type,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      data = #{data,jdbcType=LONGVARCHAR}
    where token = #{token,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.swinginwind.xql.pay.entity.ExTempData" >
    update tsports.ex_temp_data
    set type = #{type,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where token = #{token,jdbcType=VARCHAR}
  </update>
</mapper>