<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.swinginwind.xql.pay.mapper.VideoPermissionMapper" >
  <resultMap id="BaseResultMap" type="com.swinginwind.xql.pay.entity.VideoPermission" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="video_id" property="videoId" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="due_date" property="dueDate" jdbcType="TIMESTAMP" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="operate_user_id" property="operateUserId" jdbcType="INTEGER" />
    <result column="operate_user_name" property="operateUserName" jdbcType="VARCHAR" />
    <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, video_id, start_date, due_date, order_id, operate_user_id, operate_user_name, operate_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from video_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from video_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.swinginwind.xql.pay.entity.VideoPermission" >
    insert into video_permission (id, user_id, video_id, 
      start_date, due_date, order_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{videoId,jdbcType=INTEGER}, 
      #{startDate,jdbcType=TIMESTAMP}, #{dueDate,jdbcType=TIMESTAMP}, #{orderId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.swinginwind.xql.pay.entity.VideoPermission" >
    insert into video_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="videoId != null" >
        video_id,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="dueDate != null" >
        due_date,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null" >
        #{videoId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dueDate != null" >
        #{dueDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.swinginwind.xql.pay.entity.VideoPermission" >
    update video_permission
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null" >
        video_id = #{videoId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dueDate != null" >
        due_date = #{dueDate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.swinginwind.xql.pay.entity.VideoPermission" >
    update video_permission
    set user_id = #{userId,jdbcType=INTEGER},
      video_id = #{videoId,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      due_date = #{dueDate,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from video_permission
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByUserIds" >
    delete from video_permission
    where user_id in 
      <foreach item="item" collection="userIds" separator="," open="(" close=")" index="">  
      	#{item}  
      </foreach>  
  </delete>
  <insert id="insertBatch">
  insert into video_permission (id, user_id, video_id, 
      start_date, due_date, order_id, operate_user_id, operate_user_name, operate_time
      )
    values 
    <foreach collection="list" item="item" index="index" separator=",">
    (#{item.id,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, #{item.videoId,jdbcType=INTEGER}, 
      #{item.startDate,jdbcType=TIMESTAMP}, #{item.dueDate,jdbcType=TIMESTAMP}, #{item.orderId,jdbcType=INTEGER}
      , #{item.operateUserId,jdbcType=INTEGER}, #{item.operateUserName,jdbcType=VARCHAR}, #{item.operateTime,jdbcType=TIMESTAMP})
      </foreach>
  </insert>
</mapper>